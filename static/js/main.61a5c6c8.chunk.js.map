{"version":3,"sources":["components/Button.js","components/Navbar/MenuItems.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","MenuItems","title","url","cName","Navbar","state","clicked","handleClick","setState","this","map","item","index","href","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAGMA,G,MAAS,CAAC,eAAgB,iBAE1BC,EAAQ,CAAC,cAAe,cAEjBC,EAAS,SAAC,GAMhB,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,WAEMC,EAAmBR,EAAOS,SAASH,GACrCA,EACAN,EAAO,GACLU,EAAkBT,EAAMQ,SAASF,GAAcA,EAAaN,EAAM,GAExE,OACE,wBACEU,UAAS,cAASH,EAAT,YAA6BE,GACtCL,QAASA,EACTD,KAAMA,EAHR,SAKGD,KCzBMS,EAAY,CACvB,CACEC,MAAO,OACPC,IAAK,IACLC,MAAO,aAET,CACEF,MAAO,WACPC,IAAK,YACLC,MAAO,aAET,CACEF,MAAO,WACPC,IAAK,YACLC,MAAO,aAET,CACEF,MAAO,aACPC,IAAK,aACLC,MAAO,aAET,CACEF,MAAO,UACPC,IAAK,IACLC,MAAO,qBCsBIC,G,kNAvCbC,MAAQ,CACNC,SAAS,G,EAGXC,YAAc,WACZ,EAAKC,SAAS,CACZF,SAAU,EAAKD,MAAMC,W,uDAIvB,OACE,sBAAKP,UAAU,cAAf,UACE,sBAAKA,UAAU,cAAf,mBACQ,mBAAGA,UAAU,oBAErB,qBAAKA,UAAU,YAAYN,QAASgB,KAAKF,YAAzC,SACE,mBACER,UACEU,KAAKJ,MAAMC,QAAU,qBAAuB,wBAIlD,oBAAIP,UAAWU,KAAKJ,MAAMC,QAAU,kBAAoB,WAAxD,SACGN,EAAUU,KAAI,SAACC,EAAMC,GACpB,OACE,6BACE,mBAAGb,UAAWY,EAAKR,MAAOU,KAAMF,EAAKT,IAArC,SACGS,EAAKV,SAFDW,QAQf,cAAC,EAAD,6B,GAlCaE,c,MCKNC,MARf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.61a5c6c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\n\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\n\r\nexport const Button = ({\r\n  children,\r\n  type,\r\n  onClick,\r\n  buttonStyle,\r\n  buttonSize\r\n}) => {\r\n  const checkButtonStyle = STYLES.includes(buttonStyle)\r\n    ? buttonStyle\r\n    : STYLES[0];\r\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n  return (\r\n    <button\r\n      className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n      onClick={onClick}\r\n      type={type}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","export const MenuItems = [\r\n  {\r\n    title: 'Home',\r\n    url: '/',\r\n    cName: 'nav-links'\r\n  },\r\n  {\r\n    title: 'Services',\r\n    url: '/services',\r\n    cName: 'nav-links'\r\n  },\r\n  {\r\n    title: 'Products',\r\n    url: '/products',\r\n    cName: 'nav-links'\r\n  },\r\n  {\r\n    title: 'Contact Us',\r\n    url: 'contact-us',\r\n    cName: 'nav-links'\r\n  },\r\n  {\r\n    title: 'Sign Up',\r\n    url: '#',\r\n    cName: 'nav-links-mobile'\r\n  }\r\n];\r\n","import React, { Component } from 'react';\r\nimport { Button } from '../Button';\r\nimport { MenuItems } from './MenuItems';\r\n\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    clicked: false\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      clicked: !this.state.clicked\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <nav className='NavbarItems'>\r\n        <div className='navbar-logo'>\r\n          React <i className='fab fa-react'></i>\r\n        </div>\r\n        <div className='menu-icon' onClick={this.handleClick}>\r\n          <i\r\n            className={\r\n              this.state.clicked ? 'fas fa-fw fa-times' : 'fas fa-fw fa-bars'\r\n            }\r\n          ></i>\r\n        </div>\r\n        <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\r\n          {MenuItems.map((item, index) => {\r\n            return (\r\n              <li key={index}>\r\n                <a className={item.cName} href={item.url}>\r\n                  {item.title}\r\n                </a>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <Button>Sign Up</Button>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import Navbar from './components/Navbar/Navbar';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Navbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}